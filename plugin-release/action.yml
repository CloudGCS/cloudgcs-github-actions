name: "Build MC Plugin"
description: "This action builds a Mission Controller plugin and creates a GitHub release with the change log file."
inputs:
  cs-proj-file-full-path:
    description: "Path to the .csproj file of the plugin"
    required: true
  github-token:
    description: "GitHub token for authentication"
    required: true

runs:
  using: "composite"
  steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Get Project Version
      id: get-project-version
      uses: CloudGCS/cloudgcs-github-actions/get-project-version@1.0-get-project-version
      with:
        project-version-file-full-path: ${{ inputs.cs-proj-file-full-path }}

    - name: Set up .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: "8.0.x"

    - name: Restore dependencies
      run: |
        cd ${{ needs.set-variables.outputs.mcPath }}
        dotnet nuget add source --username ${{ secrets.USERNAME }} --password ${{ secrets.PASSWORD }} --store-password-in-clear-text --name cloudgcs-repo "https://nuget.pkg.github.com/CloudGCS/index.json"
        dotnet restore

    - name: Build for Linux
      run: dotnet build --runtime linux-x64 ${{ inputs.cs-proj-file-full-path }} -o ./build-x64

    - name: Create ZIP file for Linux
      run: |
        cd build-x64
        zip -r ${{ inputs.cs-proj-file-full-path }}.zip .

    - name: Upload artifact for Linux
      uses: actions/upload-artifact@v4
      with:
        name: ${{ inputs.cs-proj-file-full-path }}.zip
        path: build-x64/${{ inputs.cs-proj-file-full-path }}.zip
